name: Build Release

on:
  push:
    branches:  
      - 'main'
    paths:
      - 'lib/**'
      - 'video_player/lib/**'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag: v${{ steps.yaml-version.outputs['version'] }}
    steps:
      - uses: actions/checkout@v4

      - name: Parse pubspec.yaml
        id: yaml-version
        uses: nichmor/minimal-read-yaml@v0.0.2
        with:
          config: pubspec.yaml

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
            allowUpdates: true
            draft: true
            tag: "v${{ steps.yaml-version.outputs['version'] }}"
            commit: 'main'
            token: ${{ secrets.GITHUB_TOKEN }}
  
  android:
    name: Build and sign android bundle
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v4

      - name: Setup the Java environment
        uses: actions/setup-java@v4
        with:
          distribution: oracle
          java-version: "17"

      - name: Setup the flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Create signing key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileDir: "/home/runner/work/album_share/android/"
          fileName: "keystore.jks"
          encodedString: ${{ secrets.ANDROID_KEY_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=/home/runner/work/album_share/android/keystore.jks" >> android/key.properties

      - name: Build appbundle
        run: |
          flutter pub get
          flutter build appbundle
          ls -lah

      - name: Rename bundle
        run: mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/album_share-${{ needs.create-release.outputs.tag }}-android.aab

      - name: Create symbols archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: "zip"
          filename: album_share-${{ needs.create-release.outputs.tag }}-android-symbols.zip
          directory: build/app/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib

      - name: Add files to release
        uses: ncipollo/release-action@v1
        with:
              allowUpdates: true
              tag: ${{ needs.create-release.outputs.tag }}
              token: ${{ secrets.GITHUB_TOKEN }}
              replacesArtifacts: false
              artifacts: '**/album_share-${{ needs.create-release.outputs.tag }}-android-symbols.zip,**/album_share-${{ needs.create-release.outputs.tag }}-android.aab'

  finalise_release:
    runs-on: ubuntu-latest
    needs: 
      - create-release
      - android

    steps:
      - name: Finialise release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.create-release.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          replacesArtifacts: false
          draft: false
          allowUpdates: false

              # build_linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install flutter dependencies
  #       run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5 libmpv-dev mpv

  #     - name: Setup the flutter environment
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Generate build files
  #       run: dart run build_runner build --delete-conflicting-outputs

  #     - name: Build
  #       run: flutter build linux --release

  #     - name: Creative archive
  #       uses: thedoctor0/zip-release@0.7.6
  #       with:
  #         type: "zip"
  #         filename: AlbumShare-{{github.ref_name}}-linux.zip
  #         directory: build/linux/x64/release/bundle

  #     - name: Add archive to release
  #       uses: softprops/action-gh-release@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: build/linux/x64/release/bundle/AlbumShare-{{github.ref_name}}-linux.zip

  # build_windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup the flutter environment
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Generate build files
  #       run: dart run build_runner build --delete-conflicting-outputs

  #     - name: Build
  #       run: flutter build windows --release

  #     - name: Creative archive
  #       uses: thedoctor0/zip-release@0.7.6
  #       with:
  #         type: "zip"
  #         filename: AlbumShare-{{github.ref_name}}-windows.zip
  #         directory: build/windows/x64/runner/Release

  #     - name: Add archive to release
  #       uses: softprops/action-gh-release@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: build/windows/x64/runner/Release/AlbumShare-{{github.ref_name}}-windows.zip

  # build_macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup the flutter environment
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Generate build files
  #       run: dart run build_runner build --delete-conflicting-outputs

  #     - name: Build
  #       run: flutter build macos --release

  #     - name: Creative archive
  #       uses: thedoctor0/zip-release@0.7.6
  #       with:
  #         type: "zip"
  #         filename: AlbumShare-{{github.ref_name}}-macos.zip
  #         directory: build/macos/Build/Products/Release

  #     - name: Add archive to release
  #       uses: softprops/action-gh-release@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: build/macos/Build/Products/Release/AlbumShare-{{github.ref_name}}-macos.zip

  # build_ios:
  #   runs-on: macos-latest
  #   steps:
